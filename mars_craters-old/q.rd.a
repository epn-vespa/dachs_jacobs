<resource schema="mars_craters">
	<meta name="title">Martian Impact Craters</meta>
	<meta name="description">Global Catalog of Martian Impact Craters, Complete to 1.0-km* in Diameter by Stuart Robbins, 2009-present</meta>
	<meta name="creationDate">2016-05-12T00:00:00</meta>
	<meta name="subject">_____</meta>
	<meta name="creator.name">Mikhail Minin</meta>
	<meta name="contact.name">Mikhail Minin</meta>
	<meta name="contact.email">m.minin@jacobs-university.de</meta>
	<meta name="instrument">THEMIS Daytime IR</meta>
	<meta name="facility">Jacobs University</meta>
	<meta name="source">Stuart Robbins, Laboratory for Atmospheric and Space Physics, University of Colorado at Boulder, Boulder, Colorado, USA.</meta>
	<meta name="contentLevel">Catalog</meta>
	<meta name="type">Catalog</meta>
	<meta name="coverage">
</meta>

<!-- METADATA COMPLETE -->

	<table id="epn_core" onDisk="true">
		<mixin processing_level="5" spatial_frame_type="body">//epntap2#table</mixin>
		<meta name="info" infoName="SERVICE_PROTOCOL" infoValue="0.3">EPN-TAP</meta>
		<meta name="description">EPN-TAP access to the Stuart Robbins catalog of Martian Impact Craters</meta>
		<stc>Polygon UNKNOWNFrame [s_region]</stc>
<!-- MAKE OPTIONAL COLUMNS, for example: -->
<!--
		<column name="access_url" type="text" ucd="meta.ref.url;meta.file" verbLevel="1" description="URL of the data file, 
			case sensitive. If present, next 2 paramenters must be present."/> 
-->
<!-- MAKE NON-STANDARD COLUMNS, for example: -->
<!--
		<column name="counter" type="text" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="non standard" />


<column name="Lat" type="double precision" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="latitude from THEMIS IR, non standard" />
<column name="Lon" type="double precision" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="longitude from THEMIS IR, non standard" />
-->
<column name="diameter" type="double precision" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="diameter from THEMIS IR, non standard" />
<column name="depth" type="double precision" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="depth surface to floor, non standard" />

<column name="crater_name" type="text" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="non standard" />
<column name="degradation_state" type="text" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="non standard" />
<column name="crater_morphology_1" type="text" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="non standard" />
<column name="crater_morphology_2" type="text" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="non standard" />
<column name="crater_morphology_3" type="text" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="non standard" />
<column name="ejecta_morphology_1" type="text" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="non standard" />
<column name="ejecta_morphology_2" type="text" ucd="meta.note;meta.main" tablehead="value" verbLevel="1" description="non standard" />
		<publish />
	</table>
<!-- TABLE COMPLETE -->

	<data id="import">
		<sources>data/robins01.csv</sources>
		<csvGrammar>
			<rowfilter procDef="//products#define">
				<bind name="table">"schema.epn_core"</bind>
			</rowfilter>
		</csvGrammar>
		<make table="epn_core">
			<rowmaker idmaps="*">

<var key="diameter"            source="DIAM_CIRCLE_IMAGE"      />
<var key="depth"               source="DEPTH_SURFFLOOR_TOPOG"  />
<var key="crater_name"         source="CRATER_NAME"            />
<var key="degradation_state"   source="DEGRADATION_STATE"      />
<var key="crater_morphology_1" source="MORPHOLOGY_CRATER_1"    />
<var key="crater_morphology_2" source="MORPHOLOGY_CRATER_2"    />
<var key="crater_morphology_3" source="MORPHOLOGY_CRATER_3"    />
<var key="ejecta_morphology_1" source="MORPHOLOGY_EJECTA_1"    />
<var key="ejecta_morphology_2" source="MORPHOLOGY_EJECTA_2"    />

				<var key="granule_uid" source="CRATER_ID" />
				<var key="granule_gid">(@granule_uid)[:2]</var>
				<var key="obs_id">(@granule_uid)[-6:]</var>

				<var key="dataproduct_type">"ca"</var>
				<var key="measurement_type">"pos"</var>

				<var key="target_name">"Mars"</var>
				<var key="target_class">"planet"</var>

				<var key="c1_min" source="LONGITUDE_CIRCLE_IMAGE" />
				<var key="c1_max" source="LONGITUDE_CIRCLE_IMAGE" />

				<var key="c2_min" source="LATITUDE_CIRCLE_IMAGE" />
				<var key="c2_max" source="LATITUDE_CIRCLE_IMAGE" />


				<var key="instrument_host_name">"Mars Odyssey orbiter"</var>
				<var key="instrument_name">"THEMIS Daytime IR"</var>


<var key="s_region">
'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str((t[3])+(t[1]*((t[2]) / 2.0))/(math.pi*3390.0*math.cos(((t[4])+(t[0]*((t[2]) / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0)),str((t[4])+t[0]*((t[2]) / 2.0)/(math.pi*3390.0 / 180.0))),[(1,0,vars["diameter"],vars["c1_min"],vars["c2_min"]),(.7,.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(0,1,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-.7,.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-1,0,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-.7,-.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(0,-1,vars["diameter"],vars["c1_min"],vars["c2_min"]),(.7,-.7,vars["diameter"],vars["c1_min"],vars["c2_min"])])])
</var>


<!--
"Polygon 0 0 1 0 0 1"

'{(20d,20d),(20d,10d),(10d,20d)}'


'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str((t[3])+(t[1]*((t[2]) / 2.0))/(math.pi*3390.0*math.cos(((t[4])+(t[0]*((t[2]) / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0)),str((t[4])+t[0]*((t[2]) / 2.0)/(math.pi*3390.0 / 180.0))),[(1,0,vars["diameter"],vars["c1_min"],vars["c2_min"]),(.7,.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(0,1,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-.7,.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-1,0,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-.7,-.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(0,-1,vars["diameter"],vars["c1_min"],vars["c2_min"]),(.7,-.7,vars["diameter"],vars["c1_min"],vars["c2_min"])])])

'Polygon 20d 20d 20d 10d 10d 20d'

"Polygon '{(20d,20d),(20d,10d),(10d,20d)}'"

"'{(20d,20d),(20d,10d),(10d,20d)}'"

'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str((t[3])+(t[1]*((t[2]) / 2.0))/(math.pi*3390.0*math.cos(((t[4])+(t[0]*((t[2]) / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0)),str((t[4])+t[0]*((t[2]) / 2.0)/(math.pi*3390.0 / 180.0))),[(1,0,vars["diameter"],vars["c1_min"],vars["c2_min"]),(.7,.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(0,1,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-.7,.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-1,0,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-.7,-.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(0,-1,vars["diameter"],vars["c1_min"],vars["c2_min"]),(.7,-.7,vars["diameter"],vars["c1_min"],vars["c2_min"])])])




'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str((t[4])+t[0]*((t[2]) / 2.0)/(math.pi*3390.0 / 180.0)),str((t[3])+(t[1]*((t[2]) / 2.0))/(math.pi*3390.0*math.cos(((t[4])+(t[0]*((t[2]) / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0))),[(1,0,vars["diameter"],vars["c1_min"],vars["c2_min"]),(.7,.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(0,1,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-.7,.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-1,0,vars["diameter"],vars["c1_min"],vars["c2_min"]),(-.7,-.7,vars["diameter"],vars["c1_min"],vars["c2_min"]),(0,-1,vars["diameter"],vars["c1_min"],vars["c2_min"]),(.7,-.7,vars["diameter"],vars["c1_min"],vars["c2_min"])])])

'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (t[0]*1,t[1]*2) ),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])])

['Polygon '+' '.join([str(c[0]),str(c[1]),str(c[2])]) for c in [(vars["diameter"],vars["c1_min"],vars["c2_min"])]][0]

[' '.join([str(c[0]),str(c[1]),str(c[2])]) for c in [(vars["diameter"],vars["c1_min"],vars["c2_min"])]][0]

c=[1,2,3]
['Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str((c[2])+t[0]*((c[0]) / 2.0)/(math.pi*3390.0 / 180.0)),str((c[1])+(t[1]*((c[0]) / 2.0))/(math.pi*3390.0*math.cos(((c[2])+(t[0]*((c[0]) / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0))),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])]) for c in [(vars["diameter"],vars["c1_min"],vars["c2_min"])]]

['Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str((c2)+t[0]*((diameter) / 2.0)/(math.pi*3390.0 / 180.0)),str((c1)+(t[1]*((diameter) / 2.0))/(math.pi*3390.0*math.cos(((c2)+(t[0]*((diameter) / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0))),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])]) for c1 in [vars["c1_min"]] for c2 in [vars["c2_min"]] for diameter in [vars["diameter"]] ][0]

[i+j for i in [vars["c2_min"]] for j in [vars["c1_min"]] ][0]

[i for i in [vars["c2_min"]]][0]

' '.join(map(lambda t: str(t[0]*t[1]),((1,vars["c2_min"]),(2,vars["c2_min"]),(3,vars["c2_min"]),(4,vars["c2_min"]))))

' '.join(map(lambda t: str(t[0]*t[1]),((i,vars["c2_min"]) for i in (1,2,3,4))))

' '.join(map(lambda t: str(t[0]*t[1]),((1,vars["c2_min"]),(2,vars["c2_min"]),(3,vars["c2_min"]),(4,vars["c2_min"]))))

' '.join(map(lambda t: str(vars["c2_min"]*t),(1,2,3,4))) + str(vars["c2_min"])

' '.join(map(lambda t: vars["c2_min"]*t,(1,2,3,4)))

'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str(vars["c2_min"]+t[0]*(1337 / 2.0)/(math.pi*3390.0 / 180.0)),str(t[1])),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])])


'Polygon '+' '.join((' '.join(i) for i in map(lambda t: (str(t[0]+float(@c2_min)),str(t[1])),((1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)))))

'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str( (@c2_min) +t[0]*( 1337 / 2.0)/(math.pi*3390.0 / 180.0)),str(t[1])),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])])


'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str( @c2_min +t[0]*( @diameter / 2.0)/(math.pi*3390.0 / 180.0)),str(t[1])),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])])



'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str(t[0]),str(t[1])),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])])


'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str((@c2_min)+t[0]*((@diameter) / 2.0)/(math.pi*3390.0 / 180.0)),str((@c1_max)+(t[1]*((@diameter) / 2.0))/(math.pi*3390.0*math.cos(((@c2_min)+(t[0]*((@diameter) / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0))),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])])

<var key="s_region">'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str(@c2_min+t[0]*(@diameter / 2.0)/(math.pi*3390.0 / 180.0)),str(@c1_max+(t[1]*(@diameter / 2.0))/(math.pi*3390.0*math.cos((@c2_min+(t[0]*(@diameter / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0))),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])])</var>


<var key="s_region">'Polygon'+' '.join([str(@c2_min), str(@c1_min)])</var>

<var key="s_region">'Polygon '+' '.join([' '.join(i) for i in map(lambda t: (str(@c2_min+t[0]*(@diameter / 2.0)/(math.pi*3390.0 / 180.0)),str(@c1_max+(t[1]*(@diameter / 2.0))/(math.pi*3390.0*math.cos((@c2_min+(t[0]*(@diameter / 2.0))/(math.pi*3390.0 / 180.0))*math.pi/180.0) / 180.0))),[(1,0),(.7,.7),(0,1),(-.7,.7),(-1,0),(-.7,-.7),(0,-1),(.7,-.7)])])</var>
-->
				<apply procDef="//epntap2#populate" name="fillepn">
					<bind name="granule_uid">@granule_uid</bind>
					<bind name="granule_gid">@granule_gid</bind>
					<bind name="obs_id">@obs_id</bind>

					<bind name="dataproduct_type">@dataproduct_type</bind>
					<bind name="measurement_type">@measurement_type</bind>

					<bind name="target_name">@target_name</bind>
					<bind name="target_class">@target_class</bind>

					<bind name="c1_min">@c1_min</bind>
					<bind name="c1_max">@c1_max</bind>

					<bind name="c2_min">@c2_min</bind>
					<bind name="c2_max">@c2_max</bind>

					<bind name="instrument_host_name">@instrument_host_name</bind>
					<bind name="instrument_name">@instrument_name</bind>

<!--					<bind name="s_region">@s_region</bind>

<bind name="Lat"                >@Lat</bind>
<bind name="Lon"                >@Lon</bind>
<bind name="diameter"           >@diameter</bind>
<bind name="depth"              >@depth</bind>
<bind name="crater_name"        >@crater_name</bind>
<bind name="degradation_state"  >@degradation_state</bind>
<bind name="crater_morphology_1">@crater_morphology_1</bind>
<bind name="crater_morphology_2">@crater_morphology_2</bind>
<bind name="crater_morphology_3">@crater_morphology_3</bind>
<bind name="ejecta_morphology_1">@ejecta_morphology_1</bind>
<bind name="ejecta_morphology_2">@ejecta_morphology_2</bind>
-->

<bind name="access_format">"nothing?"</bind>
<bind name="spatial_frame_type">"someSpatialFrame?"</bind>
				</apply>
			</rowmaker>
		</make>
	</data>
</resource>
